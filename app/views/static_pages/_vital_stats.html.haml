
#vitals
  .row-fluid
    .span12.alert.alert-info
      -#
      %h3.text-info
        Current Stats:
        %small.pull-right
          %i Hover to see all stats
      %ul.unstyled.marquee
        %li
          %i.muted
            Loading...
-# nice_money depends on d3:
= javascript_include_tag 'd3/index'


%script#vitals-template{ type: 'text/template'}
  %li
    %span
      Chinese
    %strong><
      %a{href: "/projects?utf8=%E2%9C%93&search=&active_string%5B%5D=Active&year%5B%5D=2000&year%5B%5D=2001&year%5B%5D=2002&year%5B%5D=2003&year%5B%5D=2004&year%5B%5D=2005&year%5B%5D=2006&year%5B%5D=2007&year%5B%5D=2008&year%5B%5D=2009&year%5B%5D=2010&year%5B%5D=2011&year%5B%5D=2012&oda_like_name%5B%5D=ODA-like&oda_like_name%5B%5D=OOF-like&oda_like_name%5B%5D=Official+Investment&oda_like_name%5B%5D=Vague+%28Official+Finance%29&status_name%5B%5D=Completion&status_name%5B%5D=Implementation&status_name%5B%5D=Pipeline%3A+Commitment&status_name%5B%5D=Pipeline%3A+Pledge&verified_name%5B%5D=Checked"}><
        official finance projects, including pledges
    %span<>
      , <%= official.min_year %>-<%= official.max_year %>:
    %span.official#count.text-success
      <%= official_pledge.count %>

  %li
    %span
      Chinese
    %strong><
      %a{href: "/projects/official"}><
        official finance projects, excluding pledges
    %span<>
      , <%= official.min_year %>-<%= official.max_year %>:
    %span.official#count.text-success
      <%= official.count %>
  %li
    Amounting to
    %strong
      %a{href: "/projects/official"}<>
        financial commitments
    of:
    %span.official#usd_2009.text-success
      $<%= nice_money(official.usd_2009) %>


  %li
    %span
      Value of
    %strong<>
      %a{href: "/projects?utf8=%E2%9C%93&search=&active_string%5B%5D=Active&year%5B%5D=2000&year%5B%5D=2001&year%5B%5D=2002&year%5B%5D=2003&year%5B%5D=2004&year%5B%5D=2005&year%5B%5D=2006&year%5B%5D=2007&year%5B%5D=2008&year%5B%5D=2009&year%5B%5D=2010&year%5B%5D=2011&year%5B%5D=2012&oda_like_name%5B%5D=ODA-like&status_name%5B%5D=Completion&status_name%5B%5D=Implementation&status_name%5B%5D=Pipeline%3A+Commitment&verified_name%5B%5D=Checked"}<>
        ODA-Like commitments
    %span<>
      , <%= official.min_year %>-<%= official.max_year %>:
    %span.oda_like#usd_2009.text-success
      $<%= nice_money(oda_like.usd_2009) %>

  %li
    %span
      Projects
    %strong<>
      %a{href: "/projects?utf8=%E2%9C%93&search=&active_string%5B%5D=Active&year%5B%5D=2000&year%5B%5D=2001&year%5B%5D=2002&year%5B%5D=2003&year%5B%5D=2004&year%5B%5D=2005&year%5B%5D=2006&year%5B%5D=2007&year%5B%5D=2008&year%5B%5D=2009&year%5B%5D=2010&year%5B%5D=2011&year%5B%5D=2012&oda_like_name%5B%5D=ODA-like&oda_like_name%5B%5D=OOF-like&oda_like_name%5B%5D=Vague+%28Official+Finance%29&status_name%5B%5D=Completion&status_name%5B%5D=Implementation&verified_name%5B%5D=Checked"}<>
        implemented or completed
    %span><
      , <%= official.min_year %>-<%= official.max_year %>:
    %span.implemented_or_completed#percent.text-success
      <%= implemented_or_completed.percent %>%
  %li
    Value of
    %strong
      %a{href: "/projects?utf8=%E2%9C%93&search=&active_string%5B%5D=Active&year%5B%5D=2000&year%5B%5D=2001&year%5B%5D=2002&year%5B%5D=2003&year%5B%5D=2004&year%5B%5D=2005&year%5B%5D=2006&year%5B%5D=2007&year%5B%5D=2008&year%5B%5D=2009&year%5B%5D=2010&year%5B%5D=2011&year%5B%5D=2012&oda_like_name%5B%5D=ODA-like&oda_like_name%5B%5D=OOF-like&oda_like_name%5B%5D=Vague+%28Official+Finance%29&status_name%5B%5D=Completion&status_name%5B%5D=Implementation&verified_name%5B%5D=Checked"}<
        implemented/completed
    projects:
    %span.implemented_or_completed#usd_2009.text-success<
      $<%= nice_money(implemented_or_completed.usd_2009) %>


:coffeescript
  @vitals =
    official:
      params:
        get: "donor"
        # only ACTIVE by default
        verified: "Checked"
        flow_class: [
          "ODA-like"
          "Official Investment"
          "OOF-like"
          "Vague (Official Finance)"
          ].join("*")
        status: [
          # Everything but suspended and cancelled
          "Completion"
          "Implementation"
          "Pipeline: Commitment"
          #"Pipeline/identification"
          #"Pipeline: Pledge"
          #"Pipeline: Vague"
        ].join("*")

    official_pledge:
      params:
        get: "donor"
        # only ACTIVE by default
        verified: "Checked"
        flow_class: [
          "ODA-like"
          "Official Investment"
          "OOF-like"
          "Vague (Official Finance)"
          ].join("*")
        status: [
          # Everything but suspended and cancelled
          "Completion"
          "Implementation"
          "Pipeline: Commitment"
          #"Pipeline/identification"
          "Pipeline: Pledge"
          #"Pipeline: Vague"
        ].join("*")

    oda_like:
      params:
        get: "donor"
        # only ACTIVE by default
        verified: "Checked"
        flow_class: [
          "ODA-like"
          ].join("*")
        status: [
          # Everything but suspended and cancelled
          "Completion"
          "Implementation"
          "Pipeline: Commitment"
          # "Pipeline/identification"
          # "Pipeline: Pledge"
          #"Pipeline: Vague"
        ].join("*")

    implemented_or_completed:
      params:
        get: "donor"
        # only ACTIVE by default
        verified: "Checked"
        flow_class: [
          "ODA-like"
          #"Official investment"
          "OOF-like"
          "Vague (Official Finance)"
          ].join("*")
        status: [
          # Everything but suspended and cancelled
          "Completion"
          "Implementation"
        ].join("*")


  returned_queries = 0


  $.get '/aggregates/projects', vitals.official.params, (data) ->
    this_set = vitals.official

    data = (d for d in data when d["donor"] is "CHN")[0]
    this_set.count = data["count"]
    this_set.usd_2009 = data["usd_2009"]
    props = ( prop for prop in data)
    this_set.min_year = data["min_year"]
    this_set.max_year = data["max_year"]

    returned_queries += 1
    fill_template_if_finished(vitals, returned_queries)

  $.get '/aggregates/projects', vitals.official_pledge.params, (data) ->
      this_set = vitals.official_pledge

      data = (d for d in data when d["donor"] is "CHN")[0]
      this_set.count = data["count"]

  $.get '/aggregates/projects', vitals.oda_like.params, (data) ->
    this_set = vitals.oda_like

    data = (d for d in data when d["donor"] is "CHN")[0]
    this_set.count = data["count"]
    this_set.usd_2009 = data["usd_2009"]
    this_set.min_year = data["min_year"]
    this_set.max_year = data["max_year"]

    returned_queries += 1
    fill_template_if_finished(vitals, returned_queries)

  $.get '/aggregates/projects', vitals.implemented_or_completed.params, (data) ->
    this_set = vitals.implemented_or_completed

    data = (d for d in data when d["donor"] is "CHN")[0]
    this_set.count = data["count"]
    this_set.usd_2009 = data["usd_2009"]
    this_set.min_year = data["min_year"]
    this_set.max_year = data["max_year"]

    returned_queries += 1
    fill_template_if_finished(vitals, returned_queries)

  fill_template_if_finished = (vitals, returned_queries) ->
    # console.log returned_queries
    if returned_queries is 3
      vitals.implemented_or_completed.percent = Math.round((vitals.implemented_or_completed.count / vitals.official.count)*100)
      template = _.template($('#vitals-template').html(), vitals)

      $('#vitals ul').html('')
      $('#vitals ul').append(template)
      marquee.create('.marquee')

  @marquee =

    create: (selector) ->
      this.selector = selector
      this.step = 0
      this.length = $(selector+ ' li').length
      this.start()
      this.phase = this.period * .1

      m = this
      $(selector).parent()
        .mouseenter(marquee.reveal)
        .mouseleave(marquee.continue)

    hide_all: (method=null) ->
      if method is 'slide'
        $(this.selector + ' li').slideUp(300)
      else
        $(this.selector + ' li').hide()

    show_all: () ->
      $(this.selector + ' li').slideDown('slow')

    stop: () ->
      marquee.state = 'stopped'

    period: 3000
    start: () ->
      marquee.state = 'started'
      marquee.hide_all()
      $(marquee.selector + ' li:eq(' + marquee.step + ')').fadeIn(marquee.phase, () ->
        marquee.cycling = setInterval(marquee.increment, marquee.period)
      )

    increment: () ->
      m = marquee
      if m.state != 'stopped'
        step_from = m.step
        step_to = (step_from + 1) % (m.length)
        # console.log("increment", step_from, step_to)
        $(m.selector+ ' li:eq(' + step_from + ')').fadeOut(marquee.phase, () ->
          $(m.selector+' li:eq(' + step_to + ')').fadeIn(marquee.phase)
        )

        m.step = step_to

    continue: () ->
      marquee.hide_all()
      $(marquee.selector + ' li:eq(' + marquee.step + ')').show()
      marquee.state ='started'
    reveal: (m) ->
      marquee.stop()
      marquee.show_all()
