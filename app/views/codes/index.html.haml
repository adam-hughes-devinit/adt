- provide :title, @class_name.titleize
- hidden_attributes = ["created_at", "updated_at", "id", "color", "content", "chinese_content"]
- dir = params[:dir] == 'asc' ? 'desc' : 'asc'

%h1.page-header
	View all 
	= @class_name.titleize
.row-fluid
	- if @query.length > 0
		.span6		
			.well.well-small
				%h3
					Filters:
				%table.table.table-condensed.table-hover
					%tbody
					- @query.each do |key, value|
						%tr
						%td
							%strong 
							= key
						%td
							= value
						%td
							= link_to "Remove", params.except(key).except(:page), class: "label label-important"
				
	- params.delete(:page)
	.span6
		- if current_user_is_aiddata
			= link_to "New #{@class_name.titleize}", new_polymorphic_path(@class_name.constantize), class: "btn" 



- if @objects.length > 0

	.row-fluid
		= will_paginate @objects
		
	.row-fluid
		%table.table-hover.table
			%thead
				%tr
					- @objects.first.attributes.each_pair do |k,v|
						- if !hidden_attributes.include?(k)
							%th
								= link_to k.titleize, params.merge(order: k, dir: dir)
					%th
						Links
			%tbody
				- @objects.each do |o|
					%tr
						- o.attributes.each_pair do |k, v|
							- if !hidden_attributes.include?(k)
								%td
									- if k == 'name'
										= link_to v, o
									- elsif k =~ /_id$/ && (relation = k.sub(/_id$/, '').to_sym) && o.respond_to?(relation)
										- new_v = o.send(relation)
										- if new_v.respond_to?(:name)
											= link_to new_v.name, new_v
										- else
											= new_v.to_s
									- else
										= v
						%td
							= link_to "View", o
							|
							- if current_user_is_aiddata
								= link_to "Edit", edit_polymorphic_path(o), class: "text-warning"

	.row-fluid
		= will_paginate @objects
